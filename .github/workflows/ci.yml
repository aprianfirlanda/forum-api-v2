name: Continuous Integration

on:
  pull_request:
    branch:
      - master

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD_TEST }}
          POSTGRES_USER: ${{ secrets.PGUSER_TEST }}
          POSTGRES_DB: ${{ secrets.PGDATABASE_TEST }}

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      # run steps required in the workflow
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Migrate database
        run: npm run migrate up
        env:
          NODE_ENV: test
          PGHOST_TEST: ${{ secrets.PGHOST_TEST }}
          PGUSER_TEST: ${{ secrets.PGUSER_TEST }}
          PGDATABASE_TEST: ${{ secrets.PGDATABASE_TEST }}
          PGPASSWORD_TEST: ${{ secrets.PGPASSWORD_TEST }}
          PGPORT_TEST: ${{ secrets.PGPORT_TEST }}

      - name: Run test
        run: npm run test
        env:
          NODE_ENV: test
          PGHOST_TEST: ${{ secrets.PGHOST_TEST }}
          PGUSER_TEST: ${{ secrets.PGUSER_TEST }}
          PGDATABASE_TEST: ${{ secrets.PGDATABASE_TEST }}
          PGPASSWORD_TEST: ${{ secrets.PGPASSWORD_TEST }}
          PGPORT_TEST: ${{ secrets.PGPORT_TEST }}
          ACCESS_TOKEN_KEY: ${{ secrets.ACCESS_TOKEN_KEY }}
          REFRESH_TOKEN_KEY: ${{ secrets.REFRESH_TOKEN_KEY }}
